<?xml version='1.0' encoding='ISO-8859-15' ?>
<!-- 

;;; $Id$

(define (alloue n)
  (let ((init (memoryGet)))
    (let ((end (+ init n)))
      (while (< (memoryGet) end)
         #t ) ) ) )
    
(let ((init (memoryGet))
      (n    1000) )
  ;(print init)(newline)
  (alloue n)
  (let ((end (memoryGet)))
    ;(print end)(newline)
    (> (+ init n) end) ) )

;;; end of mem-2.scm

 -->
<programme2
><definitionFonction nom='alloue'
><variables
><variable nom='n'
/></variables
><corps
><blocUnaire
><variable nom='init'
/><valeur
><invocationPrimitive fonction='memoryGet'
></invocationPrimitive
></valeur
><corps
><blocUnaire
><variable nom='end'
/><valeur
><operationBinaire operateur='+'
><operandeGauche
><variable nom='init'
/></operandeGauche
><operandeDroit
><variable nom='n'
/></operandeDroit
></operationBinaire
></valeur
><corps
><boucle
><condition
><operationBinaire operateur='&lt;'
><operandeGauche
><invocationPrimitive fonction='memoryGet'
></invocationPrimitive
></operandeGauche
><operandeDroit
><variable nom='end'
/></operandeDroit
></operationBinaire
></condition
><corps
><booleen valeur='true'
/></corps
></boucle
></corps
></blocUnaire
></corps
></blocUnaire
></corps
></definitionFonction
><blocLocal
><liaisons
><liaison
><variable nom='init'
/><initialisation
><invocationPrimitive fonction='memoryGet'
></invocationPrimitive
></initialisation
></liaison
><liaison
><variable nom='n'
/><initialisation
><entier valeur='1000'
/></initialisation
></liaison
></liaisons
><corps
><invocation
><fonction
><variable nom='alloue'
/></fonction
><arguments
><variable nom='n'
/></arguments
></invocation
><blocUnaire
><variable nom='end'
/><valeur
><invocationPrimitive fonction='memoryGet'
></invocationPrimitive
></valeur
><corps
><operationBinaire operateur='&gt;'
><operandeGauche
><operationBinaire operateur='+'
><operandeGauche
><variable nom='init'
/></operandeGauche
><operandeDroit
><variable nom='n'
/></operandeDroit
></operationBinaire
></operandeGauche
><operandeDroit
><variable nom='end'
/></operandeDroit
></operationBinaire
></corps
></blocUnaire
></corps
></blocLocal
></programme2
>
